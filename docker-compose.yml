version: '3.7'

services:
  db:
    container_name: postgres
    image: postgres
    env_file:
      - ./.env
    volumes:
      - db:/data/postgres  # todo maybe add ports
  redis:
    image: redis:alpine
    command:
      - redis-server
    env_file:
      - ./.env
    restart: on-failure
    volumes:
      - redis_data:/data
  app:
    build: .
    command: bash "run.sh"
    env_file:
      - ./.env
    restart: always
    ports:
      - "5555:5555"
      - "8015:8015"
    depends_on:
      - redis
      - db
    volumes:
      - ./log:/app/log
      - ./media:/app/media
      - ./media_compressed:/app/media_compressed
      - ./xlsx_files:/app/xlsx_files
      - ./regru_task:/app/regru_task
  elasticsearch:
    image: elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=true
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  filebeat:
    image: dockerhub.timeweb.cloud/elastic/filebeat:8.10.2
    container_name: filebeat
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./log/app.log:/usr/share/app/app.log:ro # Монтируем ваш лог-файл
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:8.10.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=${KIBANA_USER}
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    ports:
    - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  redis_data:
  db:
  es_data:
    driver: local
